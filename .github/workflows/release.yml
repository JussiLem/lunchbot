# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  release:
    types:
      - created
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npx projen build
      - name: Find mutations
        id: self_mutation
        run: "          git add .\ 

          \          git diff --staged --patch --exit-code > .repo.patch || echo \"self_mutation_happened=true\" >> $GITHUB_OUTPUT

          \        "
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: "          echo \"::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch.\"

          \          cat .repo.patch

          \          exit 1

          \        "
      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
  self_mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: "          git config user.name \"github-actions\"

          \          git config user.email \"github-actions@github.com\"

          \        "
      - name: Push changes
        env:
          PULL_REQUEST_REF: ${{ github.event.pull_request.head.ref }}
        run: "          git add .

          \          git commit -s -m \"chore: self mutation\"

          \          git push origin HEAD:$PULL_REQUEST_REF

          \        "
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Deploy
        run: "          # Add your deployment commands here

          \          echo \"Deploying...\"

          \          npx projen deploy lunchbot-dev

          \        "
