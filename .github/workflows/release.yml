# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  release:
    types:
      - created
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.16.0
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npx projen build
      - name: Find mutations
        id: self_mutation
        run: "          git add .\ 

          \          git diff --staged --patch --exit-code > .repo.patch || echo \"self_mutation_happened=true\" >> $GITHUB_OUTPUT

          \        "
        working-directory: ./
      - name: Upload patch
        if: steps.self_mutation.outputs.self_mutation_happened
        uses: actions/upload-artifact@v4
        with:
          name: .repo.patch
          path: .repo.patch
          overwrite: true
      - name: Fail build on mutation
        if: steps.self_mutation.outputs.self_mutation_happened
        run: "          echo \"::error::Files were changed during build (see build log). If this was triggered from a fork, you will need to update your branch.\"

          \          cat .repo.patch

          \          exit 1

          \        "
      - name: Semantic Release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
      - name: Upload Build Artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: cdk.out/**
          retention-days: 5
  self_mutation:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: always() && needs.build.outputs.self_mutation_happened && !(github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: "          git config user.name \"github-actions\"

          \          git config user.email \"github-actions@github.com\"

          \        "
      - name: Push changes
        env:
          PULL_REQUEST_REF: ${{ github.event.pull_request.head.ref }}
        run: "          git add .

          \          git commit -s -m \"chore: self mutation\"

          \          git push origin HEAD:$PULL_REQUEST_REF

          \        "
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: dev
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.16.0
      - name: Ensure cdk.out Directory is Clean
        run: rm -rf cdk.out && mkdir -p cdk.out
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          github-token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          path: cdk.out
      - name: Set Permissions for cdk.out
        run: chmod -R 755 cdk.out
      - name: Install dependencies
        run: "          ls -R

          \          npm install

          \        "
      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.CDK_DEFAULT_REGION }}
      - name: Deploy
        env:
          CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
          CDK_DEFAULT_REGION: ${{ secrets.CDK_DEFAULT_REGION }}
        run: "          ls -R cdk.out

          \          echo \"Deploying...\"

          \          npx cdk deploy lunchbot-dev

          \        "
